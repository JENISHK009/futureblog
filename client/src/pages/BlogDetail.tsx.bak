import { useEffect, useState, useRef } from "react";
import { useParams, useLocation } from "wouter";
import { useQuery } from "@tanstack/react-query";
import { motion, useScroll, useTransform } from "framer-motion";
import { BlogWithDetails } from "@shared/schema";
import { Skeleton } from "@/components/ui/skeleton";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip";
import { Heart, MessageSquare, Share2, Bookmark, Clock, Calendar, ArrowUp, ChevronRight, ThumbsUp, Eye } from "lucide-react";
import ScrollReveal from "@/components/effects/ScrollReveal";
import BackgroundGradient from "@/components/effects/BackgroundGradient";
import { useTheme } from "@/contexts/ThemeContext";

interface TOCItem {
  id: string;
  text: string;
  level: number;
}

export default function BlogDetail() {
  const { slug } = useParams();
  const [, setLocation] = useLocation();
  const [tocItems, setTocItems] = useState<TOCItem[]>([]);
  const [activeId, setActiveId] = useState<string>("");
  const contentRef = useRef<HTMLDivElement>(null);
  
  const { data: blog, isLoading, error } = useQuery<BlogWithDetails>({
    queryKey: [`/api/blogs/${slug}`],
  });
  
  useEffect(() => {
    if (!blog) return;
    
    // Generate TOC from content
    const tempDiv = document.createElement('div');
    tempDiv.innerHTML = blog?.content || '';
    
    const headings = tempDiv.querySelectorAll('h2, h3, h4');
    const items: TOCItem[] = [];
    
    headings.forEach((heading) => {
      const id = heading.id || heading.textContent?.trim().toLowerCase().replace(/\s+/g, '-') || '';
      const text = heading.textContent || '';
      const level = parseInt(heading.tagName.substring(1));
      
      items.push({ id, text, level });
      
      // Add IDs to headings in the content if they don't have one
      if (!heading.id) {
        heading.id = id;
      }
    });
    
    setTocItems(items);
  }, [blog]);
  
  useEffect(() => {
    if (!contentRef.current) return;
    
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setActiveId(entry.target.id);
          }
        });
      },
      { rootMargin: '0px 0px -80% 0px' }
    );
    
    const headingElements = contentRef.current.querySelectorAll('h2, h3, h4');
    headingElements.forEach((el) => observer.observe(el));
    
    return () => {
      headingElements.forEach((el) => observer.unobserve(el));
    };
  }, [blog]);
  
  if (isLoading) {
    return (
      <div className="container mx-auto px-4 py-12">
        <Skeleton className="w-full h-[400px] rounded-xl mb-8" />
        <div className="max-w-4xl mx-auto">
          <Skeleton className="h-10 w-3/4 mb-4" />
          <div className="flex items-center space-x-4 mb-6">
            <Skeleton className="w-12 h-12 rounded-full" />
            <div>
              <Skeleton className="h-5 w-40 mb-1" />
              <Skeleton className="h-4 w-60" />
            </div>
          </div>
          {Array(5).fill(0).map((_, i) => (
            <Skeleton key={i} className="h-4 w-full mb-3" />
          ))}
        </div>
      </div>
    );
  }
  
  if (error || !blog) {
    return (
      <div className="container mx-auto px-4 py-12 text-center">
        <h1 className="text-2xl font-bold mb-4">Blog not found</h1>
        <p className="text-muted-foreground mb-6">
          The blog you're looking for doesn't exist or has been removed.
        </p>
        <Button onClick={() => setLocation("/blogs")}>
          Back to Blogs
        </Button>
      </div>
    );
  }
  
  // Type safety - ensure we have a proper blog object by creating a non-null copy
  const safeBlog: BlogWithDetails = {
    ...blog,
    id: blog.id || 0,
    title: blog.title || 'Untitled Blog',
    content: blog.content || '',
    excerpt: blog.excerpt || '',
    slug: blog.slug || '',
    featuredImage: blog.featuredImage || 'https://via.placeholder.com/800x400?text=Bloggers+Ground',
    categoryId: blog.categoryId || 0,
    authorId: blog.authorId || 0,
    createdAt: blog.createdAt || new Date(),
    readingTime: blog.readingTime || 3,
    likes: blog.likes || 0,
    comments: blog.comments || 0,
    author: {
      id: blog.author?.id || 0, 
      name: blog.author?.name || 'Anonymous', 
      username: blog.author?.username || 'anonymous', 
      email: blog.author?.email || '', 
      avatar: blog.author?.avatar || null, 
      bio: blog.author?.bio || null, 
      password: blog.author?.password || '', 
      createdAt: blog.author?.createdAt || new Date()
    },
    category: blog.category || { 
      id: 0, 
      name: 'Uncategorized', 
      slug: 'uncategorized', 
      icon: '',
      blogCount: 0 
    }
  };
  
  // Calculate reading time based on content length
  const calculateReadingTime = (content: string): number => {
    const wordsPerMinute = 225;
    const wordCount = content?.trim().split(/\s+/).length || 0;
    return Math.ceil(wordCount / wordsPerMinute) || 1; // Minimum 1 minute
  };
  
  // For parallax header effect
  const { scrollY } = useScroll();
  const headerOpacity = useTransform(scrollY, [0, 300], [1, 0.3]);
  const headerScale = useTransform(scrollY, [0, 300], [1, 1.05]);
  const titleY = useTransform(scrollY, [0, 300], [0, 100]);
  
  // Get reading time
  const readingTime = safeBlog.readingTime || calculateReadingTime(safeBlog.content || '');
  
  // Get theme for style decisions
  const { isDarkMode } = useTheme();
  
  return (
    <div className="min-h-screen">
      {/* Background with subtle gradient */}
      <BackgroundGradient className="fixed inset-0 z-[-1]" variant="cyber" />
      
      {/* Hero Section with Featured Image */}
      <motion.div 
        className="relative w-full h-[70vh] overflow-hidden"
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.8 }}
      >
        {/* Parallax Image */}
        <motion.div
          className="absolute inset-0 w-full h-full"
          style={{ 
            opacity: headerOpacity,
            scale: headerScale
          }}
        >
          <img
            src={safeBlog.featuredImage}
            alt={safeBlog.title}
            className="w-full h-full object-cover"
          />
          {/* Overlay with gradient */}
          <div className="absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-transparent"></div>
        </motion.div>
        
        {/* Content overlay with title and meta */}
        <div className="absolute inset-0 flex items-end">
          <motion.div 
            className="container mx-auto px-4 md:px-6 pb-12 md:pb-20"
            style={{ y: titleY }}
          >
            <motion.div 
              className="max-w-4xl mx-auto"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
            >
              <div className="flex flex-wrap items-center gap-3 mb-4">
                <Badge className="bg-blue-600 hover:bg-blue-700 px-3 py-1 text-white font-medium">
                  {safeBlog.category?.name || "Category"}
                </Badge>
                
                <TooltipProvider>
                  <Tooltip>
                    <TooltipTrigger asChild>
                      <Badge 
                        variant="outline" 
                        className="backdrop-blur-md bg-black/30 border-gray-700 text-gray-300 flex items-center gap-1 px-3"
                      >
                        <Clock className="h-3 w-3 text-blue-400" />
                        {readingTime} min read
                      </Badge>
                    </TooltipTrigger>
                    <TooltipContent>
                      <p>Estimated reading time</p>
                    </TooltipContent>
                  </Tooltip>
                </TooltipProvider>
                
                <TooltipProvider>
                  <Tooltip>
                    <TooltipTrigger asChild>
                      <Badge 
                        variant="outline" 
                        className="backdrop-blur-md bg-black/30 border-gray-700 text-gray-300 flex items-center gap-1 px-3"
                      >
                        <Eye className="h-3 w-3 text-blue-400" />
                        {1043 + safeBlog.id} views
                      </Badge>
                    </TooltipTrigger>
                    <TooltipContent>
                      <p>Total views</p>
                    </TooltipContent>
                  </Tooltip>
                </TooltipProvider>
              </div>
              
              <h1 className="text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 font-heading leading-tight">
                {safeBlog.title}
              </h1>
              
              <div className="flex items-center gap-4">
                <Avatar className="h-12 w-12 ring-2 ring-blue-500/50">
                  <AvatarImage src={safeBlog.author?.avatar || ''} alt={safeBlog.author?.name || 'Author'} />
                  <AvatarFallback className="bg-blue-900 text-blue-100">
                    {safeBlog.author?.name?.charAt(0) || 'A'}
                  </AvatarFallback>
                </Avatar>
                
                <div>
                  <h3 className="font-medium text-white">{safeBlog.author?.name || 'Anonymous'}</h3>
                  <div className="flex items-center text-sm text-gray-300">
                    <Calendar className="h-3 w-3 mr-1 text-blue-400" /> 
                    {new Date(safeBlog.createdAt).toLocaleDateString('en-US', { 
                      year: 'numeric', 
                      month: 'long', 
                      day: 'numeric' 
                    })}
                  </div>
                </div>
                
                <div className="ml-auto flex space-x-3">
                  <TooltipProvider>
                    <Tooltip>
                      <TooltipTrigger asChild>
                        <Button 
                          size="sm" 
                          className="bg-blue-600/20 hover:bg-blue-600/30 border border-blue-500/30 backdrop-blur-sm text-white rounded-full p-3 h-10 w-10"
                        >
                          <Bookmark className="h-4 w-4" />
                        </Button>
                      </TooltipTrigger>
                      <TooltipContent>
                        <p>Save for later</p>
                      </TooltipContent>
                    </Tooltip>
                  </TooltipProvider>
                  
                  <TooltipProvider>
                    <Tooltip>
                      <TooltipTrigger asChild>
                        <Button 
                          size="sm" 
                          className="bg-blue-600/20 hover:bg-blue-600/30 border border-blue-500/30 backdrop-blur-sm text-white rounded-full p-3 h-10 w-10"
                        >
                          <Share2 className="h-4 w-4" />
                        </Button>
                      </TooltipTrigger>
                      <TooltipContent>
                        <p>Share this article</p>
                      </TooltipContent>
                    </Tooltip>
                  </TooltipProvider>
                </div>
              </div>
            </motion.div>
          </motion.div>
        </div>
      </motion.div>
      
      {/* Main Content Area */}
      <div className="container mx-auto px-4 md:px-6 py-10 relative">
        <div className="flex flex-col lg:flex-row gap-8 lg:gap-12 max-w-6xl mx-auto">
          {/* Sticky TOC */}
          <aside className="lg:w-64 order-2 lg:order-1">
            <div className="lg:sticky lg:top-24">
              <ScrollReveal direction="left" distance={20}>
                <div className="p-5 rounded-xl border border-blue-900/30 backdrop-blur-sm bg-slate-50/5 dark:bg-zinc-900/30 shadow-lg">
                  <h3 className="text-lg font-bold mb-4 bg-gradient-to-r from-blue-400 to-blue-600 bg-clip-text text-transparent">
                    Table of Contents
                  </h3>
                  
                  <div className="space-y-1">
                    {tocItems.map((item, index) => (
                      <motion.div
                        key={item.id}
                        initial={{ opacity: 0, x: -10 }}
                        animate={{ opacity: 1, x: 0 }}
                        transition={{ duration: 0.2, delay: 0.1 + index * 0.04 }}
                      >
                        <a
                          href={`#${item.id}`}
                          className={`
                            flex items-center py-1.5 text-sm group transition-all duration-200
                            ${item.level === 3 ? 'pl-4' : item.level === 4 ? 'pl-6' : 'pl-0'} 
                            ${activeId === item.id 
                              ? 'text-blue-500 font-medium' 
                              : 'text-gray-500 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-200'}
                          `}
                        >
                          {activeId === item.id && (
                            <span className="absolute -left-0.5 w-1 h-5 bg-blue-500 rounded-full opacity-70"></span>
                          )}
                          <ChevronRight className={`mr-1 h-3 w-3 transition-opacity duration-200 
                            ${activeId === item.id ? 'opacity-100 text-blue-500' : 'opacity-0 group-hover:opacity-70'}`} 
                          />
                          <span className="truncate">{item.text}</span>
                        </a>
                      </motion.div>
                    ))}
                  </div>
                </div>
              </ScrollReveal>
              
              {/* Social Share Buttons */}
              <ScrollReveal direction="left" delay={0.2} distance={20}>
                <div className="mt-6 p-5 rounded-xl border border-blue-900/30 backdrop-blur-sm bg-slate-50/5 dark:bg-zinc-900/30 shadow-lg">
                  <h3 className="text-sm font-medium mb-3 text-gray-600 dark:text-gray-400">SHARE THIS ARTICLE</h3>
                  <div className="flex space-x-2">
                    <Button 
                      size="sm" 
                      variant="ghost"
                      className="bg-blue-600/10 hover:bg-blue-600/20 text-blue-600 dark:text-blue-400 rounded-lg h-9 w-9 p-0"
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M16 8.049c0-4.446-3.582-8.05-8-8.05C3.58 0-.002 3.603-.002 8.05c0 4.017 2.926 7.347 6.75 7.951v-5.625h-2.03V8.05H6.75V6.275c0-2.017 1.195-3.131 3.022-3.131.876 0 1.791.157 1.791.157v1.98h-1.009c-.993 0-1.303.621-1.303 1.258v1.51h2.218l-.354 2.326H9.25V16c3.824-.604 6.75-3.934 6.75-7.951z"/>
                      </svg>
                    </Button>
                    <Button 
                      size="sm" 
                      variant="ghost"
                      className="bg-blue-600/10 hover:bg-blue-600/20 text-blue-600 dark:text-blue-400 rounded-lg h-9 w-9 p-0"
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z"/>
                      </svg>
                    </Button>
                    <Button 
                      size="sm" 
                      variant="ghost"
                      className="bg-blue-600/10 hover:bg-blue-600/20 text-blue-600 dark:text-blue-400 rounded-lg h-9 w-9 p-0"
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z"/>
                      </svg>
                    </Button>
                    <Button 
                      size="sm" 
                      variant="ghost"
                      className="bg-blue-600/10 hover:bg-blue-600/20 text-blue-600 dark:text-blue-400 rounded-lg h-9 w-9 p-0"
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8.051 1.999h.089c.822.003 4.987.033 6.11.335a2.01 2.01 0 0 1 1.415 1.42c.101.38.172.883.22 1.402l.01.104.022.26.008.104c.065.914.073 1.77.074 1.957v.075c-.001.194-.01 1.108-.082 2.06l-.008.105-.009.104c-.05.572-.124 1.14-.235 1.558a2.007 2.007 0 0 1-1.415 1.42c-1.16.312-5.569.334-6.18.335h-.142c-.309 0-1.587-.006-2.927-.052l-.17-.006-.087-.004-.171-.007-.171-.007c-1.11-.049-2.167-.128-2.654-.26a2.007 2.007 0 0 1-1.415-1.419c-.111-.417-.185-.986-.235-1.558L.09 9.82l-.008-.104A31.4 31.4 0 0 1 0 7.68v-.123c.002-.215.01-.958.064-1.778l.007-.103.003-.052.008-.104.022-.26.01-.104c.048-.519.119-1.023.22-1.402a2.007 2.007 0 0 1 1.415-1.42c.487-.13 1.544-.21 2.654-.26l.17-.007.172-.006.086-.003.171-.007A99.788 99.788 0 0 1 7.858 2h.193zM6.4 5.209v4.818l4.157-2.408L6.4 5.209z"/>
                      </svg>
                    </Button>
                  </div>
                </div>
              </ScrollReveal>
            </div>
          </aside>
          
          {/* Main Content */}
          <main className="flex-1 order-1 lg:order-2">
            <article>
              {/* Blog content */}
              <ScrollReveal>
                <div 
                  ref={contentRef}
                  className={`prose ${isDarkMode ? 'dark:prose-invert' : ''} prose-lg max-w-none
                    prose-headings:font-heading prose-headings:font-bold
                    prose-h2:text-2xl prose-h2:mt-12 prose-h2:mb-4 
                    prose-h2:pb-2 prose-h2:border-b prose-h2:border-blue-500/20
                    prose-h3:text-xl prose-h3:mt-8 prose-h3:mb-3
                    prose-p:text-gray-700 dark:prose-p:text-gray-300
                    prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-a:no-underline prose-a:font-medium hover:prose-a:text-blue-800 dark:hover:prose-a:text-blue-300
                    prose-blockquote:border-l-4 prose-blockquote:border-blue-500 prose-blockquote:bg-blue-50 dark:prose-blockquote:bg-blue-900/20 prose-blockquote:py-1 prose-blockquote:px-6 prose-blockquote:rounded-r-md
                    prose-img:rounded-xl prose-img:shadow-lg
                    prose-code:text-blue-600 dark:prose-code:text-blue-400 prose-code:bg-blue-100 dark:prose-code:bg-blue-900/30 prose-code:px-1 prose-code:py-0.5 prose-code:rounded-md prose-code:before:content-none prose-code:after:content-none
                  `}
                  dangerouslySetInnerHTML={{ 
                    __html: safeBlog.content || `
                      <p>
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed commodo erat eu viverra mollis. 
                        Quisque eu purus rhoncus, gravida mi non, tincidunt velit. 
                        Mauris vel ultrices nisl, et tempor odio. Nulla facilisi.
                      </p>
                      
                      <h2 id="introduction">Introduction</h2>
                      <p>
                        In the rapidly evolving landscape of web development, staying ahead means constantly adapting 
                        to new technologies and approaches. The future promises even more innovation, with several 
                        trends becoming increasingly prominent.
                      </p>
                      
                      <p>
                        Web development has transformed significantly over the past decade. From static HTML pages to dynamic, 
                        interactive applications, the evolution has been remarkable. Modern web applications now offer user 
                        experiences comparable to native applications, blurring the line between web and desktop/mobile applications.
                      </p>
                      
                      <h2 id="ai-integration">AI Integration in Web Development</h2>
                      <p>
                        Artificial Intelligence is revolutionizing how websites are built and experienced. 
                        From automated coding assistants to intelligent user interfaces, AI is becoming an 
                        indispensable part of the web development ecosystem.
                      </p>
                      
                      <h3 id="coding-assistants">AI Coding Assistants</h3>
                      <p>
                        Modern development environments now incorporate AI-powered code suggestions, automating 
                        repetitive tasks and helping developers write more efficient code with fewer bugs.
                      </p>
                      
                      <h3 id="personalization">User Experience Personalization</h3>
                      <p>
                        AI algorithms analyze user behavior to customize content and interface elements in real-time, 
                        creating more engaging and relevant experiences for each visitor.
                      </p>
                      
                      <h2 id="performance-optimization">Performance Optimization</h2>
                      <p>
                        As web applications grow more complex, performance optimization becomes increasingly critical. 
                        Several new approaches are gaining traction:
                      </p>
                      
                      <p>
                        Performance isn't just about speed—it affects everything from user experience to search engine 
                        rankings. Modern optimization goes beyond simple minification and compression.
                      </p>
                      
                      <h3 id="edge-computing">Edge Computing</h3>
                      <p>
                        By moving computation closer to users, edge computing reduces latency and improves performance 
                        for users worldwide, making applications feel more responsive regardless of location.
                      </p>
                    `
                  }}
                ></div>
              </ScrollReveal>
              
              {/* Engagement Section */}
              <ScrollReveal delay={0.2}>
                <div className="mt-12 pt-6 border-t border-blue-500/20">
                  <div className="flex flex-wrap justify-between items-center">
                    <div className="flex items-center gap-6 mb-4 md:mb-0">
                      <Button 
                        className="flex items-center gap-2 bg-blue-50 hover:bg-blue-100 text-blue-600 dark:bg-blue-900/20 dark:hover:bg-blue-900/30 dark:text-blue-400 dark:border-blue-800/50 border border-blue-200 rounded-full px-5 py-2 h-auto"
                      >
                        <ThumbsUp className="h-5 w-5" />
                        <span>{safeBlog.likes || 0} likes</span>
                      </Button>
                      
                      <Button 
                        className="flex items-center gap-2 bg-gray-50 hover:bg-gray-100 text-gray-600 dark:bg-gray-800/30 dark:hover:bg-gray-800/50 dark:text-gray-400 dark:border-gray-700/50 border border-gray-200 rounded-full px-5 py-2 h-auto"
                      >
                        <MessageSquare className="h-5 w-5" />
                        <span>{safeBlog.comments || 0} comments</span>
                      </Button>
                    </div>
                    
                    <div className="flex items-center gap-3">
                      <Button 
                        className="bg-blue-600 hover:bg-blue-700 text-white rounded-full px-5 h-10 shadow-md shadow-blue-600/20"
                      >
                        <Share2 className="h-4 w-4 mr-2" />
                        Share
                      </Button>
                    </div>
                  </div>
                </div>
              </ScrollReveal>
              
              {/* Comments Section */}
              <ScrollReveal delay={0.3}>
                <div className="mt-12 pt-6 border-t border-blue-500/20">
                  <h3 className="text-2xl font-bold mb-6 pb-2 border-b border-blue-500/20 text-gray-900 dark:text-white">
                    Comments <span className="text-sm font-normal text-gray-500 dark:text-gray-400">({safeBlog.comments || 0})</span>
                  </h3>
                  
                  <div className="space-y-6">
                    {(safeBlog.comments === 0 || !safeBlog.comments) ? (
                      <div className="p-8 rounded-xl border border-blue-900/20 backdrop-blur-sm bg-slate-50/5 dark:bg-zinc-900/20 shadow-lg text-center">
                        <MessageSquare className="h-10 w-10 mx-auto mb-3 text-blue-500 opacity-60" />
                        <h4 className="text-lg font-medium mb-2 text-gray-700 dark:text-gray-300">No comments yet</h4>
                        <p className="text-gray-500 dark:text-gray-400 mb-6 max-w-md mx-auto">
                          Be the first to share your thoughts on this article. Your insights could spark meaningful discussions!
                        </p>
                        <Button 
                          className="bg-blue-600 hover:bg-blue-700 text-white rounded-full px-6 py-2 h-auto shadow-md shadow-blue-600/20"
                        >
                          Write a Comment
                        </Button>
                      </div>
                    ) : (
                      <div className="p-6 rounded-xl border border-gray-200 dark:border-gray-800 bg-white dark:bg-zinc-900/50">
                        <div className="flex items-start gap-4">
                          <Avatar className="h-10 w-10">
                            <AvatarFallback>JD</AvatarFallback>
                          </Avatar>
                          <div className="flex-1">
                            <div className="flex justify-between items-center mb-1">
                              <h4 className="font-medium text-gray-900 dark:text-white">John Doe</h4>
                              <span className="text-xs text-gray-500">2 hours ago</span>
                            </div>
                            <p className="text-gray-700 dark:text-gray-300 mb-3">
                              Great article! I especially liked the section about AI integration. Looking forward to more content like this.
                            </p>
                            <div className="flex items-center gap-4 text-sm text-gray-500">
                              <button className="flex items-center gap-1 hover:text-blue-600">
                                <ThumbsUp className="h-3.5 w-3.5" /> Like
                              </button>
                              <button className="flex items-center gap-1 hover:text-blue-600">
                                <MessageSquare className="h-3.5 w-3.5" /> Reply
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </ScrollReveal>
            </article>
          </main>
        </div>
      </div>
      
      {/* Back to top button */}
      <div className="fixed bottom-8 right-8 z-50">
        <TooltipProvider>
          <Tooltip>
            <TooltipTrigger asChild>
              <Button 
                onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}
                className="h-12 w-12 rounded-full bg-blue-600 hover:bg-blue-700 text-white shadow-lg shadow-blue-600/30"
              >
                <ArrowUp className="h-5 w-5" />
              </Button>
            </TooltipTrigger>
            <TooltipContent>
              <p>Back to top</p>
            </TooltipContent>
          </Tooltip>
        </TooltipProvider>
      </div>
    </div>
  );
}
